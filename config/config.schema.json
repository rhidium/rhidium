{"$schema":"http://json-schema.org/draft-07/schema#","$ref":"#/definitions/UserConfigOptions","definitions":{"UserConfigOptions":{"type":"object","properties":{"debug":{"type":"object","properties":{"debug_mode_enabled":{"type":"boolean","description":"Should we perform general debugging (everything that isn't specified in other options)"},"chat_input_command_api_data":{"type":"boolean","description":"Should the Discord API Command data be displayed when registering?"},"interactions":{"type":"boolean","description":"Should interaction objects be debugged when received?"},"autocomplete_execution_time":{"type":"boolean","description":"Should the time it takes to query auto-completes be displayed"},"modal_submit_execution_time":{"type":"boolean","description":"Should the time it takes to respond to modal submit interactions be displayed? Useful because these interaction can't be deferred"},"command_throttling":{"type":"boolean","description":"Should command usage throttling be debugged?"},"localizations":{"type":"boolean","description":"Should language localization be debugged?"},"command_data":{"type":"boolean","description":"Should a table with a complete overview of commands be displayed on boot?"}},"additionalProperties":false,"description":"Debug configuration for this instance, useful for developers"},"colors":{"type":"object","properties":{"primary":{"$ref":"#/definitions/HexColorString"},"secondary":{"$ref":"#/definitions/HexColorString"},"success":{"$ref":"#/definitions/HexColorString"},"error":{"$ref":"#/definitions/HexColorString"},"info":{"$ref":"#/definitions/HexColorString"},"warning":{"$ref":"#/definitions/HexColorString"},"debug":{"$ref":"#/definitions/HexColorString"},"waiting":{"$ref":"#/definitions/HexColorString"}},"additionalProperties":false,"description":"Color customization for embeds, and other user feedback/interactions"},"emojis":{"type":"object","properties":{"success":{"type":"string"},"error":{"type":"string"},"info":{"type":"string"},"warning":{"type":"string"},"debug":{"type":"string"},"waiting":{"type":"string"},"separator":{"type":"string"}},"additionalProperties":false,"description":"Emoji customization for embeds, and other user feedback/interactions"},"urls":{"type":"object","properties":{"github":{"type":"string","description":"The URL to the project repository"},"docs":{"type":"string","description":"The URL to the project documentation"},"website":{"type":"string","description":"The URL to the project website"},"support_server":{"type":"string","description":"The URL to the project support server"}},"additionalProperties":false,"description":"URL configuration for the client"},"logging":{"type":"object","properties":{"max_size":{"type":"string","description":"Whats the max size of a file before it should rotate"},"max_files":{"type":"string","description":"Whats the max amount of files to keep before deleting the oldest"},"zipped_archive":{"type":"boolean","description":"Should rotated log files be archived, instead of deleted?"},"directory":{"type":"string","description":"What directory should log files be stored in?"},"date_pattern":{"type":"string","description":"What date pattern should be used for log file names"},"combined_logging":{"type":"boolean","description":"Should there be a combined log file that holds everything?"},"error_logging":{"type":"boolean","description":"Should there be an error log file?"},"warn_logging":{"type":"boolean","description":"Should there be a warning log file?"},"info_logging":{"type":"boolean","description":"Should there be an info log file?"},"http_logging":{"type":"boolean","description":"Should there be an http log file?"},"verbose_logging":{"type":"boolean","description":"Should there be a verbose log file?"},"debug_logging":{"type":"boolean","description":"Should there be a debug log file?"},"silly_logging":{"type":"boolean","description":"Should there be a silly log file?"}},"additionalProperties":false,"description":"File logging (winston) configuration"},"$schema":{"type":"string","description":"JSON schema used for validation and type-ahead/Intellisense, you should never change this"},"api":{"$ref":"#/definitions/IClientAPI"},"permissions":{"$ref":"#/definitions/IPermissions","description":"Client internal permission level configuration"},"client":{"$ref":"#/definitions/IClient","description":"Discord client/bot configuration for this instance"},"cooldown":{"$ref":"#/definitions/ICommandCooldown","description":"Default command throttle configuration"},"cluster":{"$ref":"#/definitions/IClusterManagerOptions","description":"Change the entry file of this application to further fine-tune sharding and clustering settings"}},"required":["$schema","api","permissions","client","cooldown","cluster"],"additionalProperties":false},"HexColorString":{"type":"string"},"IClientAPI":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Whether the API should be enabled"},"port":{"type":["number","null"],"description":"Which port the server application should run on, between `0` and `65535` (disabled if `null`)\n\nNote: Port range `[0-1024]` should be considered reserved as they're well-known ports, these require SuperUser/Administrator access\n\nNote: Port range `[49152-65535]` should be considered reserved for Ephemeral Ports (Unix based devices, configurable)\n\nReference:  {@link  https://www.ncftp.com/ncftpd/doc/misc/ephemeral_ports.html }"}},"required":["enabled","port"],"additionalProperties":false},"IPermissions":{"type":"object","properties":{"owner_id":{"$ref":"#/definitions/Snowflake","description":"The bot owner's Discord user id - represents the highest permission level"},"developer_ids":{"type":"array","items":{"$ref":"#/definitions/Snowflake"},"description":"Array of Discord user id's that have the Developer permission level"},"system_administrator_ids":{"type":"array","items":{"$ref":"#/definitions/Snowflake"},"description":"Array of Discord user id's that should be able to manage the bot - like restarting, viewing logs, audits, etc."},"default_lock_member_permissions":{"type":"boolean","description":"If a command has a permission level of Administrator, should we automatically hide that command from non-Administrator users, by using `#setDefaultMemberPermissions(0)` on the command?"}},"required":["owner_id","developer_ids","system_administrator_ids","default_lock_member_permissions"],"additionalProperties":false},"Snowflake":{"type":"string","description":"https://discord.com/developers/docs/reference#snowflakes"},"IClient":{"type":"object","properties":{"id":{"$ref":"#/definitions/Snowflake","description":"This client's application/user ID. You can get one here: https://discord.com/developers/applications"},"token":{"type":"string","description":"The secret token used to log in to this bot account. You can get one here: https://discord.com/developers/applications"},"development_server_id":{"$ref":"#/definitions/Snowflake","description":"The server/guild id where test commands should be registered to - development only"},"refuse_unknown_command_interactions":{"type":"boolean","description":"Should we refuse, and reply to, interactions that belong to unknown commands?"},"suppress_unknown_interaction_warnings":{"type":"boolean","description":"Should we suppress warnings about unknown interactions? You should enable this if you run multiple applications/processes under the same bot account used for this client, or register a lot of command-scoped component listeners/collectors"},"error_channel_id":{"$ref":"#/definitions/Snowflake","description":"The id of the channel where internal errors should be logged to"},"command_usage_channel_id":{"$ref":"#/definitions/Snowflake","description":"Should we log command/component usage in a Discord channel (id)?"},"presence":{"type":"object","properties":{"active":{"type":"boolean"},"status":{"$ref":"#/definitions/PresenceStatusData"},"activities":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"type":{"type":"string","enum":["PLAYING","WATCHING","LISTENING","STREAMING","COMPETING","CUSTOM"]},"url":{"type":"string"}},"required":["name","type"],"additionalProperties":false}}},"required":["active","status","activities"],"additionalProperties":false,"description":"The default client status and activities, set when the client is ready. This is only set once on boot, and not updated afterwards."}},"required":["id","token"],"additionalProperties":false},"PresenceStatusData":{"anyOf":[{"$ref":"#/definitions/ClientPresenceStatus"},{"type":"string","const":"invisible"}]},"ClientPresenceStatus":{"type":"string","enum":["online","idle","dnd"]},"ICommandCooldown":{"type":"object","properties":{"default_cooldown_enabled":{"type":"boolean","description":"Whether command throttling is enabled by default"},"default_cooldown_type":{"type":"string","enum":["User","Member","Guild","Channel","Global"],"description":"What resource/identifier this cooldown should apply to"},"default_cooldown_usages":{"type":"number","description":"The amount of time the command can be used before being throttled"},"default_cooldown_duration":{"type":"number","description":"The duration (in ms) usages last for"},"default_cooldown_persistent":{"type":"boolean","description":"Whether the cooldown is persistent (i.e. does it persist between bot restarts)? If true, uses prisma data to store cooldown (slower). If false, uses internal memory TTL cache to store cooldown for as long as they're relevant (faster, uses more RAM)"}},"required":["default_cooldown_enabled","default_cooldown_type","default_cooldown_usages","default_cooldown_duration","default_cooldown_persistent"],"additionalProperties":false,"description":"Represents a command throttling configuration that is unique to our config.json file"},"IClusterManagerOptions":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Is clustering enabled"},"total_shards":{"type":["number","null"],"description":"Total amount of shards to spawn, use null for auto"},"shards_per_clusters":{"type":"number","description":"Amount of shards per cluster"},"total_clusters":{"type":["number","null"],"description":"Amount of clusters to spawn, use null for auto"},"mode":{"type":"string","enum":["worker","process"],"description":"Mode to spawn clusters in"},"respawn":{"type":"boolean","description":"Should the process respawn on exit"},"restarts":{"$ref":"#/definitions/IClusterRestartOptions","description":"Additional cluster restart options"}},"required":["enabled","total_shards","shards_per_clusters","total_clusters","mode","respawn","restarts"],"additionalProperties":false},"IClusterRestartOptions":{"type":"object","properties":{"max":{"type":"number","description":"Maximum amount of restarts a cluster can have in the interval"},"interval":{"type":"number","description":"Interval in milliseconds on which the current restarts amount of a cluster will be reset"}},"required":["max","interval"],"additionalProperties":false,"description":"Represents essential options to configure clustering & sharding\n\nUnfortunately we still can't use this to generate our json schema as it's not supported by the generator (bigint)"}}}